trigger:
- master

variables:
- group: production

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: Build

    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'

    - task: CopyFiles@2
      displayName: 'Copy files to build directory'
      inputs:
        contents: |
          dist/**
          views/**
          node_modules/**
        targetFolder: '$(Pipeline.Workspace)/build'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Pipeline.Workspace)/build'
        archiveType: 'tar'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar.gz'
        replaceExistingArchive: true
        includeRootFolder: false

    - task: PublishPipelineArtifact@1
      displayName: 'Publish artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar.gz'
        artifactName: 'drop'

- stage: Deploy
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
    - deployment: VMDeploy
      displayName: 'Deploy to droplet'
      environment:
        name: 'production'
        resourceType: VirtualMachine
      workspace:
        clean: all
      strategy:
        runOnce:
          deploy:
            steps:
              - task: ExtractFiles@1
                displayName: 'Extract files'
                inputs:
                  archiveFilePatterns: '$(Pipeline.Workspace)/drop/**/$(Build.BuildId).tar.gz'
                  destinationFolder: '$(deploy_path)'
                  cleanDestinationFolder: true

              - task: Bash@3
                displayName: 'Run deploy script'
                inputs:
                  filePath: '$(deploy_script_path)'

              - task: Bash@3
                displayName: 'Restart application'
                inputs:
                  targetType: 'inline'
                  script: pm2 restart Home